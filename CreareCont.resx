<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>